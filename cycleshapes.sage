# Author: Hersh Singh [hershdeep@gmail.com]
# Date: April 18, 2014

N=12

plists = Partitions(N).list()

# Takes a Partition object and checks if it is balanced.
def CheckBalancedCycle(plist):
    M = plist[0]*plist[-1]

    if not M%lcm(plist) == 0:
        return False, 0

    plist_new = [M/i for i in plist]
    plist_new.sort()
    plist_new.reverse()

    if plist_new == plist:
        return True, M
    else:
        return False, 0

balanced_cycles=[]
def GetAllBalancedCycles(k=0):
    # If k=0, return the complete table
    # Else, return the table only for that value of k

    number_balancedcycles = 0
    if not k==0:
        for plist in [plist for plist in plists if len(plist)==2*k]:
            is_balanced, M = CheckBalancedCycle(plist)
            if is_balanced:
                number_balancedcycles = number_balancedcycles + 1
                balanced_cycles.append(plist)
                print plist.to_exp_dict()
    else:
        for k in range(1,N+1):
            print "k =",k
            for plist in [plist for plist in plists if len(plist)==k]:
                is_balanced, M = CheckBalancedCycle(plist)
                if is_balanced:
                    number_balancedcycles = number_balancedcycles + 1
                    balanced_cycles.append(plist)
                    print plist.to_exp_dict()
    print "\nTotal number of balanced cyles = ", number_balancedcycles

# NOTE: This only outputs the correct answer for N=12, as the characters are hardcoded
def LatexTableOfCharacters():
    latex_final = ''

    for k in range(1,N/2):

        plists_k = [plist for plist in plists if len(plist)==2*k]

        if not plists_k:
            continue

        number_balancedcycles = 0

        latex_final_temp = ''

        for plist in plists_k:
            is_balanced, M = CheckBalancedCycle(plist)

            if is_balanced:
                number_balancedcycles += 1

                # Get the cycle shape in the correct format
                s=latex(plist.to_exp_dict())
                s = s.replace("\\left\\{","").replace("\\right\\}","").replace(" : ","^").replace(","," ")

                if M%2 ==0:
                    # N even

                    if not k%2==0:
                        str_append = ' )} \\left( \\frac{-' + str(M) + '}{d} \\right)'
                    else:
                        str_append = ")}"

                    s = '$ ' + s + ' $ & $ e^{\iota\pi(\\frac c {' + str(M) + '} + b ' + str_append + ' $' + '& $' + str(M) + '$'

                else:
                    # N odd, we have two cases: d even and d odd
                    if not k%2==0:
                        str_append_1 = ' )} \\left( \\frac{-' + str(M) + '}{d} \\right)'
                        str_append_2 = r' \left( \frac{d}{' + str(M) + r'} \right)'
                    else:
                        str_append_1 = ")}"
                        str_append_2 = ""
                    
                    s = '\multirow{2}{*}{$ ' + s + ' $} & $ e^{\iota\pi(\\frac c {' + str(M) + '} + b ' + str_append_1 + '\quad $  for $d$ odd' + r' & \multirow{2}{*}{$' + str(M) + r'$} \\ & $-e^{\iota\pi ac/ ' + str(M) + r'}' + str_append_2 + r'\quad$     for $d$ even & '

                latex_final_temp += '\t\hline' + s + r'\\' +' \n\t\n'

        if number_balancedcycles==0:
            continue

        latex_final += '\n\t\hline\hline' r'\multicolumn{3}{|c|}{$k=' + str(k) + '$' + r'}\\' '\n\t\n' + latex_final_temp


    head = r"""%Note: This file has been automatically generated by the cycleshapes.sage script.

\documentclass[a4paper]{article}
\usepackage{amsmath,amssymb}
\usepackage{multirow}
\renewcommand\arraystretch{1.5}

\title{Character Table for M=12}
\begin{document}
\maketitle

\begin{table}[h]
\begin{center}
\begin{tabular}{| l | c | r |} 
    \hline
    Cycle Shape & Character $\chi$ & N \\
    \hline 
"""

    tail = r"""\hline\end{tabular}
\end{center}
\end{table}

\end{document}"""

    filename = 'character_table.tex'
    f = open(filename, "w")
    f.write(head + latex_final + tail)
    f.close()
    os.system('pdflatex ' + filename + ' > /dev/null &' )
    
    print latex_final

#LatexTableOfCharacters()

# vim: ft=python

